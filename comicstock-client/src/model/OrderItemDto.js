/**
 * ComicStock.WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd && false) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ComicStockwebApi) {
      root.ComicStockwebApi = {};
    }
    root.ComicStockwebApi.OrderItemDto = factory(root.ComicStockwebApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The OrderItemDto model module.
   * @module model/OrderItemDto
   * @version v1
   */

  /**
   * Constructs a new <code>OrderItemDto</code>.
   * @alias module:model/OrderItemDto
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>OrderItemDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrderItemDto} obj Optional instance to populate.
   * @return {module:model/OrderItemDto} The populated <code>OrderItemDto</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('condition')) {
        obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
      }
      if (data.hasOwnProperty('quantity')) {
        obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {module:model/OrderItemDto.ConditionEnum} condition
   */
  exports.prototype['condition'] = undefined;
  /**
   * @member {Number} quantity
   */
  exports.prototype['quantity'] = undefined;
  /**
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;


  /**
   * Allowed values for the <code>condition</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ConditionEnum = {
    /**
     * value: "Mint"
     * @const
     */
    "Mint": "Mint",
    /**
     * value: "NearMintMint"
     * @const
     */
    "NearMintMint": "NearMintMint",
    /**
     * value: "NearMint"
     * @const
     */
    "NearMint": "NearMint",
    /**
     * value: "VeryFineNearMint"
     * @const
     */
    "VeryFineNearMint": "VeryFineNearMint",
    /**
     * value: "VeryFine"
     * @const
     */
    "VeryFine": "VeryFine",
    /**
     * value: "FineVeryFine"
     * @const
     */
    "FineVeryFine": "FineVeryFine",
    /**
     * value: "Fine"
     * @const
     */
    "Fine": "Fine",
    /**
     * value: "VeryGoodFine"
     * @const
     */
    "VeryGoodFine": "VeryGoodFine",
    /**
     * value: "VeryGood"
     * @const
     */
    "VeryGood": "VeryGood",
    /**
     * value: "GoodVeryGood"
     * @const
     */
    "GoodVeryGood": "GoodVeryGood",
    /**
     * value: "Good"
     * @const
     */
    "Good": "Good",
    /**
     * value: "FairGood"
     * @const
     */
    "FairGood": "FairGood",
    /**
     * value: "Fair"
     * @const
     */
    "Fair": "Fair",
    /**
     * value: "Poor"
     * @const
     */
    "Poor": "Poor"  };


  return exports;
}));


