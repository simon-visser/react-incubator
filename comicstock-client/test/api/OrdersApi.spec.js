/**
 * ComicStock.WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ComicStockwebApi);
  }
}(this, function(expect, ComicStockwebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ComicStockwebApi.OrdersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrdersApi', function() {
    describe('ordersDelete', function() {
      it('should call ordersDelete successfully', function(done) {
        //uncomment below and update the code to test ordersDelete
        //instance.ordersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersDelete_0', function() {
      it('should call ordersDelete_0 successfully', function(done) {
        //uncomment below and update the code to test ordersDelete_0
        //instance.ordersDelete_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersDelete_1', function() {
      it('should call ordersDelete_1 successfully', function(done) {
        //uncomment below and update the code to test ordersDelete_1
        //instance.ordersDelete_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersGet', function() {
      it('should call ordersGet successfully', function(done) {
        //uncomment below and update the code to test ordersGet
        //instance.ordersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersGet_0', function() {
      it('should call ordersGet_0 successfully', function(done) {
        //uncomment below and update the code to test ordersGet_0
        //instance.ordersGet_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersGet_1', function() {
      it('should call ordersGet_1 successfully', function(done) {
        //uncomment below and update the code to test ordersGet_1
        //instance.ordersGet_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersGet_2', function() {
      it('should call ordersGet_2 successfully', function(done) {
        //uncomment below and update the code to test ordersGet_2
        //instance.ordersGet_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersPut', function() {
      it('should call ordersPut successfully', function(done) {
        //uncomment below and update the code to test ordersPut
        //instance.ordersPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersPut_0', function() {
      it('should call ordersPut_0 successfully', function(done) {
        //uncomment below and update the code to test ordersPut_0
        //instance.ordersPut_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersPut_1', function() {
      it('should call ordersPut_1 successfully', function(done) {
        //uncomment below and update the code to test ordersPut_1
        //instance.ordersPut_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
