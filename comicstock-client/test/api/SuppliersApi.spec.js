/**
 * ComicStock.WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ComicStockwebApi);
  }
}(this, function(expect, ComicStockwebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ComicStockwebApi.SuppliersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SuppliersApi', function() {
    describe('suppliersDelete', function() {
      it('should call suppliersDelete successfully', function(done) {
        //uncomment below and update the code to test suppliersDelete
        //instance.suppliersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersDelete_0', function() {
      it('should call suppliersDelete_0 successfully', function(done) {
        //uncomment below and update the code to test suppliersDelete_0
        //instance.suppliersDelete_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersDelete_1', function() {
      it('should call suppliersDelete_1 successfully', function(done) {
        //uncomment below and update the code to test suppliersDelete_1
        //instance.suppliersDelete_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersGet', function() {
      it('should call suppliersGet successfully', function(done) {
        //uncomment below and update the code to test suppliersGet
        //instance.suppliersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersGet_0', function() {
      it('should call suppliersGet_0 successfully', function(done) {
        //uncomment below and update the code to test suppliersGet_0
        //instance.suppliersGet_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersGet_1', function() {
      it('should call suppliersGet_1 successfully', function(done) {
        //uncomment below and update the code to test suppliersGet_1
        //instance.suppliersGet_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersGet_2', function() {
      it('should call suppliersGet_2 successfully', function(done) {
        //uncomment below and update the code to test suppliersGet_2
        //instance.suppliersGet_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersOrder', function() {
      it('should call suppliersOrder successfully', function(done) {
        //uncomment below and update the code to test suppliersOrder
        //instance.suppliersOrder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersOrder_0', function() {
      it('should call suppliersOrder_0 successfully', function(done) {
        //uncomment below and update the code to test suppliersOrder_0
        //instance.suppliersOrder_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPatch', function() {
      it('should call suppliersPatch successfully', function(done) {
        //uncomment below and update the code to test suppliersPatch
        //instance.suppliersPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPatch_0', function() {
      it('should call suppliersPatch_0 successfully', function(done) {
        //uncomment below and update the code to test suppliersPatch_0
        //instance.suppliersPatch_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPatch_1', function() {
      it('should call suppliersPatch_1 successfully', function(done) {
        //uncomment below and update the code to test suppliersPatch_1
        //instance.suppliersPatch_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPost', function() {
      it('should call suppliersPost successfully', function(done) {
        //uncomment below and update the code to test suppliersPost
        //instance.suppliersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPost_0', function() {
      it('should call suppliersPost_0 successfully', function(done) {
        //uncomment below and update the code to test suppliersPost_0
        //instance.suppliersPost_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPost_1', function() {
      it('should call suppliersPost_1 successfully', function(done) {
        //uncomment below and update the code to test suppliersPost_1
        //instance.suppliersPost_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPut', function() {
      it('should call suppliersPut successfully', function(done) {
        //uncomment below and update the code to test suppliersPut
        //instance.suppliersPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPut_0', function() {
      it('should call suppliersPut_0 successfully', function(done) {
        //uncomment below and update the code to test suppliersPut_0
        //instance.suppliersPut_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suppliersPut_1', function() {
      it('should call suppliersPut_1 successfully', function(done) {
        //uncomment below and update the code to test suppliersPut_1
        //instance.suppliersPut_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
