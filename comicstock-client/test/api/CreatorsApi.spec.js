/**
 * ComicStock.WebApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ComicStockwebApi);
  }
}(this, function(expect, ComicStockwebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ComicStockwebApi.CreatorsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreatorsApi', function() {
    describe('creatorsDelete', function() {
      it('should call creatorsDelete successfully', function(done) {
        //uncomment below and update the code to test creatorsDelete
        //instance.creatorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsDelete_0', function() {
      it('should call creatorsDelete_0 successfully', function(done) {
        //uncomment below and update the code to test creatorsDelete_0
        //instance.creatorsDelete_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsDelete_1', function() {
      it('should call creatorsDelete_1 successfully', function(done) {
        //uncomment below and update the code to test creatorsDelete_1
        //instance.creatorsDelete_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsGet', function() {
      it('should call creatorsGet successfully', function(done) {
        //uncomment below and update the code to test creatorsGet
        //instance.creatorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsGet_0', function() {
      it('should call creatorsGet_0 successfully', function(done) {
        //uncomment below and update the code to test creatorsGet_0
        //instance.creatorsGet_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsGet_1', function() {
      it('should call creatorsGet_1 successfully', function(done) {
        //uncomment below and update the code to test creatorsGet_1
        //instance.creatorsGet_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsGet_2', function() {
      it('should call creatorsGet_2 successfully', function(done) {
        //uncomment below and update the code to test creatorsGet_2
        //instance.creatorsGet_2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsPost', function() {
      it('should call creatorsPost successfully', function(done) {
        //uncomment below and update the code to test creatorsPost
        //instance.creatorsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsPost_0', function() {
      it('should call creatorsPost_0 successfully', function(done) {
        //uncomment below and update the code to test creatorsPost_0
        //instance.creatorsPost_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsPost_1', function() {
      it('should call creatorsPost_1 successfully', function(done) {
        //uncomment below and update the code to test creatorsPost_1
        //instance.creatorsPost_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsPut', function() {
      it('should call creatorsPut successfully', function(done) {
        //uncomment below and update the code to test creatorsPut
        //instance.creatorsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsPut_0', function() {
      it('should call creatorsPut_0 successfully', function(done) {
        //uncomment below and update the code to test creatorsPut_0
        //instance.creatorsPut_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('creatorsPut_1', function() {
      it('should call creatorsPut_1 successfully', function(done) {
        //uncomment below and update the code to test creatorsPut_1
        //instance.creatorsPut_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
